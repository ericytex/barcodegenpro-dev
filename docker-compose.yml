version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: barcode-backend
    restart: unless-stopped
    ports:
      - "8034:8034"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8034
      - API_WORKERS=2
      - CORS_ORIGINS=http://localhost,http://localhost:8080,http://localhost:80,http://${DOMAIN:-localhost}
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - LOG_LEVEL=INFO
      - LOG_FILE=/app/logs/app.log
      - UPLOAD_DIR=/app/uploads
      - DOWNLOAD_DIR=/app/downloads
      - LOGS_DIR=/app/logs
    volumes:
      # Persist data
      - backend-data:/app/data
      - backend-uploads:/app/uploads
      - backend-downloads:/app/downloads
      - backend-logs:/app/logs
      - backend-archives:/app/archives
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8034/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - barcode-network

  # Frontend (Nginx serving React build)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=http://${DOMAIN:-localhost}/api
        - VITE_ENVIRONMENT=production
    container_name: barcode-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - barcode-network

  # Nginx Reverse Proxy (Optional - for production with single entry point)
  nginx-proxy:
    image: nginx:alpine
    container_name: barcode-nginx-proxy
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - barcode-network
    profiles:
      - production

volumes:
  backend-data:
    driver: local
  backend-uploads:
    driver: local
  backend-downloads:
    driver: local
  backend-logs:
    driver: local
  backend-archives:
    driver: local

networks:
  barcode-network:
    driver: bridge


