#!/bin/bash
# Interactive Quick Start Helper

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

clear

cat << 'EOF'
╔══════════════════════════════════════════════════════════════════╗
║                                                                  ║
║       🚀 BARCODE GENERATOR - DEPLOYMENT WIZARD                   ║
║                                                                  ║
╚══════════════════════════════════════════════════════════════════╝

This wizard will help you configure and deploy your application.

EOF

echo -e "${YELLOW}Do you have all the prerequisites?${NC}"
echo ""
echo "Required:"
echo "  ✓ VPS with Ubuntu (Contabo or similar)"
echo "  ✓ Root SSH access to your VPS"
echo "  ✓ Domain configured in Cloudflare"
echo "  ✓ Your VPS IP address"
echo ""

read -p "$(echo -e ${YELLOW}Do you have all prerequisites ready? [y/N]: ${NC})" -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${RED}Please prepare the prerequisites first, then run this script again.${NC}"
    exit 1
fi

echo ""
echo -e "${GREEN}Great! Let's configure your deployment.${NC}"
echo ""

# Get VPS IP
echo -e "${YELLOW}Enter your VPS IP address:${NC}"
read -p "VPS IP: " VPS_IP

# Get Domain
echo -e "${YELLOW}Enter your domain name (without http://):${NC}"
read -p "Domain: " DOMAIN

# Generate or get secret key
echo ""
echo -e "${YELLOW}Generating a secure SECRET_KEY...${NC}"
SECRET_KEY=$(openssl rand -hex 32)
echo -e "${GREEN}Generated: ${SECRET_KEY}${NC}"
echo ""

# Confirm
echo -e "${BLUE}═══════════════════════════════════════════════════════════${NC}"
echo -e "${GREEN}Configuration Summary:${NC}"
echo -e "${BLUE}═══════════════════════════════════════════════════════════${NC}"
echo ""
echo "  VPS IP:     ${YELLOW}${VPS_IP}${NC}"
echo "  Domain:     ${YELLOW}${DOMAIN}${NC}"
echo "  Secret Key: ${YELLOW}${SECRET_KEY}${NC}"
echo ""
read -p "$(echo -e ${YELLOW}Is this correct? [y/N]: ${NC})" -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${RED}Configuration cancelled. Please run this script again.${NC}"
    exit 1
fi

# Update config.sh
echo ""
echo -e "${YELLOW}Updating config.sh...${NC}"

cat > config.sh << EOF
#!/bin/bash
# Deployment Configuration
# Auto-generated by QUICKSTART.sh

# ============================================
# VPS Configuration
# ============================================

VPS_IP="${VPS_IP}"
DOMAIN="${DOMAIN}"
VPS_USER="root"
SECRET_KEY="${SECRET_KEY}"

# ============================================
# AUTO-CONFIGURED
# ============================================

SCRIPT_DIR="\$( cd "\$( dirname "\${BASH_SOURCE[0]}" )" && pwd )"
BACKEND_SOURCE="/Users/ericwatyekele/Research/BARCODE-GENERATOR/api_all_devices"
FRONTEND_SOURCE="/Users/ericwatyekele/Research/BARCODE-GENERATOR/frontend"

REMOTE_APP_DIR="/home/barcode/app"
REMOTE_BACKEND_DIR="\$REMOTE_APP_DIR/backend"
REMOTE_FRONTEND_DIR="\$REMOTE_APP_DIR/frontend"
REMOTE_SCRIPTS_DIR="/home/barcode/scripts"
REMOTE_BACKUPS_DIR="/home/barcode/backups"

API_PORT="8034"
API_HOST="127.0.0.1"
API_WORKERS="2"

validate_config() {
    local errors=0
    
    if [ "\$VPS_IP" = "YOUR_VPS_IP" ]; then
        echo "❌ Error: Please set VPS_IP in config.sh"
        errors=\$((errors + 1))
    fi
    
    if [ "\$DOMAIN" = "YOUR_DOMAIN.com" ]; then
        echo "❌ Error: Please set DOMAIN in config.sh"
        errors=\$((errors + 1))
    fi
    
    if [ "\$SECRET_KEY" = "CHANGE_THIS_TO_A_RANDOM_SECRET_KEY" ]; then
        echo "❌ Error: Please generate and set SECRET_KEY in config.sh"
        echo "   Generate one with: openssl rand -hex 32"
        errors=\$((errors + 1))
    fi
    
    if [ \$errors -gt 0 ]; then
        return 1
    fi
    
    return 0
}

export VPS_IP DOMAIN VPS_USER SECRET_KEY
export SCRIPT_DIR BACKEND_SOURCE FRONTEND_SOURCE
export REMOTE_APP_DIR REMOTE_BACKEND_DIR REMOTE_FRONTEND_DIR REMOTE_SCRIPTS_DIR REMOTE_BACKUPS_DIR
export API_PORT API_HOST API_WORKERS
EOF

chmod +x config.sh

echo -e "${GREEN}✓ Configuration saved to config.sh${NC}"
echo ""

# Test SSH connection
echo -e "${YELLOW}Testing SSH connection to VPS...${NC}"
if ssh -o ConnectTimeout=5 -o StrictHostKeyChecking=no root@${VPS_IP} "echo '✓ SSH connection successful'" 2>/dev/null; then
    echo -e "${GREEN}✓ SSH connection test passed${NC}"
else
    echo -e "${RED}✗ SSH connection failed${NC}"
    echo ""
    echo "Please verify:"
    echo "  1. VPS IP is correct"
    echo "  2. VPS is running"
    echo "  3. You can connect: ssh root@${VPS_IP}"
    echo ""
    echo "You can still proceed, but deployment will fail without SSH access."
    echo ""
    read -p "$(echo -e ${YELLOW}Continue anyway? [y/N]: ${NC})" -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

echo ""
echo -e "${BLUE}╔══════════════════════════════════════════════════════════════════╗${NC}"
echo -e "${BLUE}║                                                                  ║${NC}"
echo -e "${BLUE}║              ${GREEN}✓ Configuration Complete!${BLUE}                            ║${NC}"
echo -e "${BLUE}║                                                                  ║${NC}"
echo -e "${BLUE}╚══════════════════════════════════════════════════════════════════╝${NC}"
echo ""
echo -e "${GREEN}Next Steps:${NC}"
echo ""
echo -e "1. ${YELLOW}Review configuration:${NC}"
echo "   cat config.sh"
echo ""
echo -e "2. ${YELLOW}Start deployment:${NC}"
echo "   ./deploy.sh"
echo ""
echo -e "3. ${YELLOW}After deployment, configure DNS:${NC}"
echo "   - Go to Cloudflare Dashboard"
echo "   - Add A record: @ → ${VPS_IP}"
echo "   - Proxy: OFF (grey cloud)"
echo ""
echo -e "${GREEN}Ready to deploy? Run:${NC}"
echo -e "  ${BLUE}./deploy.sh${NC}"
echo ""


